{"version":3,"sources":["action.js","reducer.js","store.js","card.js","App.js","index.js"],"names":["getApi","query","page","fetch","initialState","data","reducer","state","action","type","console","log","payload","results","error","loadMoreError","store","createStore","applyMiddleware","thunkMiddleware","subscribe","getState","Card","cardData","className","src","image_url","alt","title","connect","cardsInfo","fetchCards","dispatch","Promise","resolve","reject","then","res","json","result","catch","err","loadMoreCards","useState","value","setvalue","handleSubmit","placeholder","onChange","event","target","onKeyPress","key","onClick","map","mal_id","length","ReactDOM","render","document","getElementById"],"mappings":"oPAAMA,EAAS,WAA+B,IAA9BC,EAA6B,uDAAvB,SAAUC,EAAa,uDAAN,EACtC,OAAOC,MAAM,2CAAD,OAA4CF,EAA5C,0BAAmEC,KCO1EE,EAAe,CACpBC,KAAM,IA4CQC,EAzCC,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACjD,OAAOA,EAAOC,MACb,IDV2B,gBCiB1B,OANAC,QAAQC,IAAI,UAAWH,EAAOI,SAC9BL,EAAK,2BACDA,GADC,IAEJF,KAAMG,EAAOI,QAAQC,QACrBC,OAAO,IAIT,IDlBwB,aCuBvB,OAJAP,EAAM,2BACFA,GADC,IAEJO,OAAO,IAKT,IDzB+B,oBC+B9B,OALAP,EAAM,2BACFA,GADC,IAEJF,KAAK,GAAD,mBAAME,EAAMF,MAAZ,YAAqBG,EAAOI,QAAQC,UACxCE,eAAe,IAKjB,IDjC4B,iBCsC3B,OAJAR,EAAM,2BACFA,GADC,IAEJQ,eAAe,IAKjB,QACC,OAAOR,IC7CJS,EAAQC,YAAYX,EAAQY,YAAgBC,MAClDH,EAAMI,WAAU,WAAKV,QAAQC,IAAIK,EAAMK,eAExBL,Q,QCMAM,EAXF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACf,OACC,yBAAKC,UAAU,QACd,yBAAKA,UAAU,eACf,yBAAKC,IAAKF,EAASG,UAAWC,IAAKJ,EAASK,QAC5C,2BAAIL,EAASK,UCAZ1B,G,MAAO,GAsDI2B,eACb,SAAAtB,GAAK,MAAG,CACNuB,UAAWvB,EAAMF,QAEnB,CACE0B,WJzDsB,SAAC9B,EAAOC,GAAR,OAAiB,SAAA8B,GAC1C,OAAO,IAAIC,SAAQ,SAACC,EAAQC,GAC1BnC,EAAOC,EAAOC,GACbkC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACNL,EAAQF,EAAS,CAACvB,KAVO,gBAUcG,QAAQ2B,QAE/CC,OAAM,SAACC,GACNN,EAAOH,EAAS,CAACvB,KAZI,aAYcG,QAAQ6B,aIiDhCC,cJ3Ca,SAACzC,EAAOC,GAAR,OAAiB,SAAA8B,GAC7C,OAAO,IAAIC,SAAQ,SAACC,EAAQC,GAC3BnC,EAAOC,EAAOC,GACZkC,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GACNL,EAAQF,EAAS,CAACvB,KAtBW,oBAsBcG,QAAQ2B,QAEnDC,OAAM,SAACC,GACNN,EAAOH,EAAS,CAACvB,KAxBQ,iBAwBcG,QAAQ6B,cI8BrCZ,EApDH,SAAC,GAA+C,IAA7CE,EAA4C,EAA5CA,WAAYD,EAAgC,EAAhCA,UAAWY,EAAqB,EAArBA,cAAqB,EAC/BC,mBAAS,IADsB,mBAClDC,EADkD,KAC3CC,EAD2C,KAOnDC,EAAe,WACnBf,EAAWa,EAAO1C,IAcpB,OACE,yBAAKsB,UAAU,OACb,4BAAQA,UAAU,QAChB,2BACEf,KAAK,OACLe,UAAU,QACVuB,YAAY,SACZC,SA1Ba,SAACC,GACpBJ,EAASI,EAAMC,OAAON,QA0BhBA,MAAOA,EACPO,WApBe,SAACF,GACL,UAAdA,EAAMG,KACPN,OAoBE,4BAAQO,QAASP,GAAjB,OAEF,yBAAKtB,UAAU,iCAEXM,EAAUwB,KAAI,SAAA/B,GAAQ,OAAI,kBAAC,EAAD,CAAMA,SAAUA,EAAU6B,IAAK7B,EAASgC,aAIpEzB,EAAU0B,OACR,yBAAKhC,UAAU,sBACb,4BAAQA,UAAU,gBAAgB6B,QA1BrB,WAErBX,EAAcE,EADd1C,GAAM,KAyBE,cAIF,SClDVuD,IAASC,OACL,kBAAC,IAAD,CAAU1C,MAAOA,GAAO,kBAAC,EAAD,OAC1B2C,SAASC,eAAe,W","file":"static/js/main.407d161b.chunk.js","sourcesContent":["const getApi = (query='naruto', page = 1) => {\n\treturn fetch(`https://api.jikan.moe/v3/search/anime?q=${query}&limit=16&page=${page}`);\n};\n\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\nexport const FETCH_FAIL = 'FETCH_FAIL';\nexport const LOAD_MORE_SUCCESS = 'LOAD_MORE_SUCCESS';\nexport const LOAD_MORE_FAIL = 'LOAD_MORE_FAIL';\n\nexport const fetchCards = (query, page) => dispatch => {\n\treturn new Promise((resolve,reject)=>{\n\t\t\tgetApi(query, page)\n\t\t\t.then((res)=>res.json())\n\t\t\t.then((result)=>{\n\t\t\t\tresolve(dispatch({type: FETCH_SUCCESS, payload:result}))\n\t\t\t})\n\t\t\t.catch((err)=>{\n\t\t\t\t\treject(dispatch({type: FETCH_FAIL, payload:err}));\n\t\t\t})\n\n\t })\n};\n\nexport const loadMoreCards = (query, page) => dispatch => {\n\treturn new Promise((resolve,reject) => {\n\t\tgetApi(query, page)\n\t\t\t.then((res)=>res.json())\n\t\t\t.then((result)=>{\n\t\t\t\tresolve(dispatch({type: LOAD_MORE_SUCCESS, payload:result}))\n\t\t\t})\n\t\t\t.catch((err)=>{\n\t\t\t\t\treject(dispatch({type: LOAD_MORE_FAIL, payload:err}));\n\t\t\t})\n\t });\n};\n","import {\n\tFETCH_SUCCESS,\n\tFETCH_FAIL,\n\tLOAD_MORE_SUCCESS,\n\tLOAD_MORE_FAIL\n} from './action';\n\n\nconst initialState = {\n\tdata: []\n}\n\nconst reducer = (state = initialState, action) => {\n\tswitch(action.type){\n\t\tcase FETCH_SUCCESS:{\n\t\t\tconsole.log('payload', action.payload);\n\t\t\tstate = {\n\t\t\t\t...state,\n\t\t\t\tdata: action.payload.results,\n\t\t\t\terror: false\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\t\tcase FETCH_FAIL:{\n\t\t\tstate={\n\t\t\t\t...state,\n\t\t\t\terror: true\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\n\t\tcase LOAD_MORE_SUCCESS:{\n\t\t\tstate={\n\t\t\t\t...state,\n\t\t\t\tdata: [...state.data, ...action.payload.results],\n\t\t\t\tloadMoreError: false\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\n\t\tcase LOAD_MORE_FAIL: {\n\t\t\tstate={\n\t\t\t\t...state,\n\t\t\t\tloadMoreError: true\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\n\t\tdefault :{\n\t\t\treturn state\n\t\t}\n\t}\n}\nexport default reducer;\n","import { createStore , applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducer';\n\nconst store = createStore(reducer,applyMiddleware(thunkMiddleware))\nstore.subscribe(()=>{console.log(store.getState())})\n\nexport default store;\n","import React from 'react';\n\nconst Card = ({ cardData }) => {\n\treturn(\n\t\t<div className='card'>\n\t\t\t<div className='cardwrapper'>\n\t\t\t<img src={cardData.image_url} alt={cardData.title}/>\n\t\t\t<p>{cardData.title}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchCards, loadMoreCards } from './action';\nimport Card from './card';\nimport './App.css';\n\nlet page = 1;\n\nconst App = ({ fetchCards, cardsInfo, loadMoreCards })  => {\n  const [value, setvalue] = useState('');\n\n  const handleChange = (event) => {\n    setvalue(event.target.value);\n  }\n\n  const handleSubmit = () => {\n    fetchCards(value, page)\n  }\n\n  const handleKeyPress = (event) => {\n    if(event.key === 'Enter'){\n      handleSubmit();\n    }\n  }\n\n  const handleLoadMore = () => {\n    page+=1;\n    loadMoreCards(value, page)\n  }\n\n  return (\n    <div className='App'>\n      <header className='flex'>\n        <input\n          type='text'\n          className='wfull'\n          placeholder='search'\n          onChange={handleChange}\n          value={value}\n          onKeyPress={handleKeyPress}\n        />\n        <button onClick={handleSubmit}>Go</button>\n      </header>\n      <div className='flex flexWrap flexStart pt100'>\n        {\n          cardsInfo.map(cardData => <Card cardData={cardData} key={cardData.mal_id} />)\n        }\n      </div>\n      {\n        cardsInfo.length ?\n          <div className='flex justifyCenter'>\n            <button className='load-more-btn' onClick={handleLoadMore}>\n              Load More\n            </button>\n          </div>\n        : null\n      }\n    </div>\n  );\n}\nexport default connect(\n  state=>({\n    cardsInfo: state.data\n  }),\n  {\n    fetchCards, loadMoreCards\n  }\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}